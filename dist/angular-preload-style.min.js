angular.module('angular.preload.style', [])

    .constant('preloadStyleConfiguration', {
        templateUrl: 'loading.html',
        scriptBaseUrl: '',
        cssFile: ''
    })

    .run(['elementCreator', function (elementCreator) {

        elementCreator.createOverlayDiv();

    }]);
angular.module('angular.preload.style').factory('elementCreator',
    ['$document', 'preloadStyleConfiguration', function ($document, preloadStyleConfiguration) {

        var createOverlayDiv = function () {
            /*var $div = angular.element('div');

            $div.html('tempalte: ' + preloadStyleConfiguration.templateUrl);

            angular.element(document.body).append($div);*/
        };


        return {
            createOverlayDiv: createOverlayDiv
        };
    }]);
angular.module("angular.preload.style").factory("injectCSS", ['$q', function ($q) {
    var injectCSS = {};

    var createLink = function (id, url) {
        var link = document.createElement('link');
        link.id = id;
        link.rel = "stylesheet";
        link.type = "text/css";
        link.href = url;
        return link;
    };

    var checkLoaded = function (url, deferred, tries) {
        for (var script in document.styleSheets) {
            var href = document.styleSheets[script].href || '';
            if (href.split("/").slice(-1).join() === url) {
                deferred.resolve();
                return;
            }
        }
        tries++;
        setTimeout(function () {
            checkLoaded(url, deferred, tries);
        }, 50);
    };

    injectCSS.set = function (id, url) {
        var tries = 0,
            deferred = $q.defer(),
            link;

        /*if (!angular.element('link#' + id).length) {
         link = createLink(id, url);
         link.onload = deferred.resolve;
         angular.element('head').append(link);
         }*/

        link = createLink(id, url);
        link.onload = deferred.resolve;
        angular.element('head').append(link);

        checkLoaded(url, deferred, tries);

        return deferred.promise;
    };

    return injectCSS;
}]);